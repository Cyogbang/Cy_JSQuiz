1. What is JavaScript?
and A programming language for creating interactive web pages
A markup language for structuring HTML documents
A style sheet language for designing web page layouts
A server-side scripting language

2. Which of the following is a correct way to declare a variable in JavaScript?
var x = 10;
let x = 10;
const x = 10;
ans All of the above

3. What is the data type of the following value in JavaScript? 10.5
and Number
String
Boolean
Undefined

4. How do you comment a single line of code in JavaScript?
ans // This is a comment
/* This is a comment */
# This is a comment
// This is a comment //

5. Which operator is used to check if two values are equal in JavaScript?
==
ans ===
=
!=

6. What is the purpose of the if statement in JavaScript?
To declare variables
To define functions
To create loops
ans To execute code conditionally

7. What is the purpose of the for loop in JavaScript?
ans To iterate over elements in an array
To define functions
To create conditional statements
To declare variables

8. How do you define a function in JavaScript?
ans function myFunction() {}
define myFunction() {}
create myFunction() {}
new myFunction() {}

9. What is the purpose of the return statement in a JavaScript function?
To exit the function
To declare variables
To call the function
ans To return a value from the function

10. What is the difference between a function declaration and a function expression?
ans Function declarations can be hoisted, while function expressions cannot.
Function expressions can be hoisted, while function declarations cannot.
There is no difference between function declarations and function expressions.
Function declarations are always anonymous, while function expressions can be named.

11. What is an object in JavaScript?
ans A collection of key-value pairs
A data type for numbers
A function
A loop

12. How do you access a property of an object in JavaScript?
object.property
object[property]
ans Both object.property and object[property]
property.object

13. What is the purpose of the this keyword in JavaScript?
ans To refer to the current object
To declare variables
To define functions
To create loopsh

14. How do you add an element to the end of an array in JavaScript?
ans array.push(element)
array.add(element)
array[array.length] = element;
array.insert(element)

15. What does DOM stand for?
ans Document Object Model
Data Object Manipulation
Document Object Manipulation
Dynamic Object Model

16. How do you access an element by its ID in JavaScript?
document.getElementById("myElement")
document.querySelector("#myElement")
ans Both document.getElementById("myElement") and document.querySelector("#myElement")
document.getElementByID("myElement")

17. How do you change the inner HTML of an element in JavaScript?
ans element.innerHTML = "new content"
element.innerText = "new content"
element.content = "new content"
element.text = "new content"

18. How do you add an event listener to an element in JavaScript?
ans element.addEventListener("click", function() { /* code */ });
element.on("click", function() { /* code */ });
element.onclick = function() { /* code */ };
All of the above

19. What is asynchronous programming in JavaScript?
ans Programming that allows multiple tasks to be executed simultaneously
Programming that executes code in a linear fashion
Programming that is synchronous by default
Programming that is only used for complex applications

20. What is a callback function in JavaScript?
ans A function that is passed as an argument to another function
A function that is executed before another function
A function that is executed after another function
A function that is executed synchronously

21. What is the purpose of the async keyword in JavaScript?
ans To declare asynchronous functions
To define synchronous functions
To create promises
To handle errors

22. What is a promise in JavaScript?
ans An object that represents the eventual completion (or failure) of an asynchronous operation
A function that is executed asynchronously Â  
A data type for storing strings
A keyword used to declare asynchronous functions

23. What is a JavaScript framework?
A collection of JavaScript libraries
ans A pre-written codebase that provides a structure for building web applications
A programming language
A tool for debugging JavaScript code

24. What is React?
ans A JavaScript library for building user interfaces
A JavaScript framework for building web applications
A CSS preprocessor
A JavaScript build tool

25. What is Angular?
A JavaScript library for building user interfaces
ans A JavaScript framework for building web applications
A CSS preprocessor
A JavaScript build tool

26. What is Vue.js?
ans A JavaScript library for building user interfaces
A JavaScript framework for building web applications
A CSS preprocessor
A JavaScript build tool

27. What is jQuery?
ans A JavaScript library for DOM manipulation and event handling
A JavaScript framework for building web applications
A CSS preprocessor
A JavaScript build tool

28. What is the difference between let and var in JavaScript?
ans let has block scope, while var has function scope
var has block scope, while let has function scope
There is no difference between let and var
let is newer than var

29. What is the purpose of the const keyword in JavaScript?
ans To declare variables that cannot be reassigned
To declare variables that can be reassigned
To define functions
To create loops

30. What is a closure in JavaScript?
ans A function that has access to variables from its outer lexical environment, even after the outer function has finished executing
A function that is executed asynchronously
A data type for storing objects
A keyword used to declare asynchronous functions

31. What is the purpose of the try...catch block in JavaScript?
ans To handle errors in your code
To define functions
To create loops
To declare variables

32. What is the purpose of the finally block in JavaScript?
ans To execute code regardless of whether an exception is thrown or not
To handle errors in your code
To define functions
To create loops

33. What is the difference between Promise.resolve() and Promise.reject()?
ans Promise.resolve() creates a resolved promise, while Promise.reject() creates a rejected promise
Promise.resolve() creates a rejected promise, while Promise.reject() creates a resolved promise
There is no difference between Promise.resolve() and Promise.reject()
Promise.resolve() is used for synchronous operations, while Promise.reject() is used for asynchronous operations

34. What is the importance of code readability in JavaScript?
Makes code easier to understand and maintain
Improves performance
Reduces the risk of errors
ans All of the above

35. What is the purpose of linting tools in JavaScript?
To detect and fix errors in your code
To format your code automatically
To optimize your code for performance
ans All of the above

36. What is the importance of using meaningful variable and function names in JavaScript?
Improves code readability
Reduces the risk of errors
Makes code more maintainable
ans All of the above

37. What is the purpose of code comments in JavaScript?
To explain the purpose of code
To make code more readable
To debug code
ans All of the above

38. What is the importance of testing your JavaScript code?
To ensure code quality
To find and fix bugs
To improve code maintainability
ans All of the above

39. What is a component in React?
A reusable piece of UI that can be rendered independently
A function that takes props as input
A JavaScript object
ans All of the above

40. How do you create a React component?
By using the class keyword
By using the function keyword
ans Both class and function keywords
Neither class nor function keywords

41. What is JSX?
ans A JavaScript syntax extension for writing HTML-like code
A CSS preprocessor
A JavaScript build tool
A JavaScript library

42. How do you render a React component in the DOM?
ans By using the ReactDOM.render() method
By using the document.createElement() method
By using the innerHTML property
By using the appendChild() method

43. What are props in React?
ans Data passed down from a parent component to a child component
Properties of a React component
Functions that can be called within a React component
State variables in a React component

44. What is state in React?
ans Data that is specific to a component and can change over time
Data that is shared between all components
Data that is passed down from a parent component to a child component
Functions that can be called within a React component

45. How do you update state in React?
By directly modifying the state object
ans By using the setState() method
By using the updateState() method
By using the setProps() method

46. What is the purpose of the useEffect hook in React?
ans To perform side effects in React components
To define functions in React components
To create state variables in React components
To render components in React

47. What is the difference between controlled and uncontrolled components in React?
ans Controlled components have their values managed by the parent component, while uncontrolled components manage their own values.
Controlled components manage their own values, while uncontrolled components have their values managed by the parent component.
There is no difference between controlled and uncontrolled components.
Controlled components are always better than uncontrolled components.

48. What is the purpose of the useContext hook in React?
ans To share state between components without passing props
To create custom hooks
To perform side effects
To render components

49. What is the purpose of the useReducer hook in React?
ans To manage complex state in React components
To create custom hooks
To perform side effects
To render components

50. What is the purpose of the useRef hook in React?
ans To create references to DOM elements
To create custom hooks
To perform side effects
To render components